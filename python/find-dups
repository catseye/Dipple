#!/usr/bin/env python

"""
Find duplicate files.

Usage: find-dups [--canonical=prefix] {dir}

If a duplicate is found, and exactly one of the copies has the prefix
given by `canonical`, commands to remove all the other copies are output.

"""

import hashlib
import os
import sys
from optparse import OptionParser


def md5(filename):
    """Compute and return the MD5 hash of the named file.

    """
    hash = hashlib.md5()
    file = open(filename, "r")
    eof = False
    while not eof:
        data = file.read(128)
        if data:
            hash.update(data)
        else:
            eof = True
    file.close()
    return hash.hexdigest()


### MAIN ###


def main(argv):
    parser = OptionParser()
    parser.add_option("--canonical",
                      dest="canonical",
                      default=None,
                      help="output commands to delete all duplicates "
                           "that do not have this prefix")
    (options, args) = parser.parse_args()
    
    hashmap = {}
    for directory in args:
        for root, dirs, files in os.walk(directory):
            for filename in files:
                full = os.path.normpath(os.path.join(root, filename))
                hash = md5(full)
                hashmap.setdefault(hash, []).append(full)

    for hash in hashmap:
        filenames = sorted(hashmap[hash])
        if len(filenames) > 1:
            print "# %s:" % hash
            for filename in filenames:
                print "#   %s" % filename

    if options.canonical is not None:
        print
        for hash in hashmap:
            filenames = sorted(hashmap[hash])
            if len(filenames) > 1:
                canonicals = []
                for filename in filenames:
                    if filename.startswith(options.canonical):
                        canonicals.append(filename)
                if len(canonicals) == 1:
                    print "# delete all except %s" % canonicals[0]
                    for filename in filenames:
                        if not filename.startswith(options.canonical):
                            print 'rm "%s"' % filename
                    print

if __name__ == '__main__':
    main(sys.argv)
