#!/usr/bin/env python

"""
Find duplicate files.

Usage: find-dups dir [canonical]

If a duplicate is found, and one of the copies is has the prefix
given by `canonical`, commands to remove all the other copies are output.

"""

import hashlib
import os
import sys


def md5(filename):
    """Compute and return the MD5 hash of the named file.

    """
    hash = hashlib.md5()
    file = open(filename, "r")
    eof = False
    while not eof:
        data = file.read(128)
        if data:
            hash.update(data)
        else:
            eof = True
    file.close()
    return hash.hexdigest()


### MAIN ###


def main(argv):
    hashmap = {}
    for root, dirs, files in os.walk(argv[1]):
        for filename in files:
            full = os.path.normpath(os.path.join(root, filename))
            hash = md5(full)
            hashmap.setdefault(hash, []).append(full)

    for hash in hashmap:
        filenames = sorted(hashmap[hash])
        if len(filenames) > 1:
            print "# %s:" % hash
            for filename in filenames:
                print "#   %s" % filename

    if len(argv) == 3:
        canonical = argv[2]
        print
        for hash in hashmap:
            filenames = sorted(hashmap[hash])
            if len(filenames) > 1:
                canonicals = []
                for filename in filenames:
                    if filename.startswith(canonical):
                        canonicals.append(filename)
                if len(canonicals) == 1:
                    print "# delete all except %s" % canonicals[0]
                    for filename in filenames:
                        if not filename.startswith(canonical):
                            print "rm '%s'" % filename
                    print

if __name__ == '__main__':
    main(sys.argv)
